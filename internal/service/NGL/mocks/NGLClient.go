// Code generated by mockery v2.45.1. DO NOT EDIT.

package mocks

import (
	context "context"
	models "task1/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// NGLClient is an autogenerated mock type for the NGLClient type
type NGLClient struct {
	mock.Mock
}

// Amount provides a mock function with given fields: ctx
func (_m *NGLClient) Amount(ctx context.Context) (models.NGLAmountResp, error) {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for Amount")
	}

	var r0 models.NGLAmountResp
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (models.NGLAmountResp, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) models.NGLAmountResp); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(models.NGLAmountResp)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewNGLClient creates a new instance of NGLClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNGLClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *NGLClient {
	mock := &NGLClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
